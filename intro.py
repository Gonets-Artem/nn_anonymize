import streamlit as st 


# if st.button("Home"):
#     st.switch_page("intro.py")
# if st.button("Page Analytics"):
#     st.switch_page("pages/analytics.py")
# if st.button("Page Managemenet"):
#     st.switch_page("pages/management.py")

def settings():
    st.set_page_config(
        page_title="Веб-сервис нейросетевой анонимизации субъектов и объектов в видеоконференции", 
        layout="wide"
    )
    st.markdown(
        """
        <style>
        [data-testid="stSidebar"][aria-expanded="true"] > div:first-child{
            width: 400px;
        }
        [data-testid="stSidebar"][aria-expanded="false"] > div:first-child{
            width: 400px;
            margin-left: -400px;
        }
        """,
        unsafe_allow_html=True,
    )
    st.title("Вступительная страница")
    st.divider()


def main():
    settings()

    st.header("Предназначение веб-сервиса", divider="rainbow")
    """
    1) Загрузка модели анонимизации;
    2) Выбор метода анонимизации (скрытие, пикселизация, размытие)
    3) Настройка системных данных;
    4) Отображение информации по текущим сеансам - цифры, динамика, изображения;
    5) Ретроспективная аналитика.
    """
    st.divider()

    st.subheader("1. Загрузка модели сегментации", divider="red")
    """
    После обучения на определенном наборе данных нейросетевая модель может быть 
    загружена в модуль для дальнейшего использования.
    
    Все сохраненные модели отображаются в таблице с указанием 
    даты изменения и размера файла.
    
    Пользователь может выбрать для использования определенную модель сегментации для анонимизации.
    """
    st.divider()

    st.subheader("2. Выбор метода анонимизации", divider="orange")
    """
    Существует 3 вида анонимизации видеоизображения:
    - Скрытие (block) - необходимый участок кадра затемняется.
    - Пикселизация (pixels) - происходит замена определенного участка на мелкие квадраты.
    - Размытие (gaussian blur) - происходит размытие определенного участка.
    
    Пикселизация и размытие возможны с изменением на черно-белую палитру. 

    Пользователь может выбрать один из предлагаемых способов.
    """
    st.divider()

    st.subheader("3. Настройка системных данных", divider="green")
    """
    Существует 3 вида таблиц с данными:
    - FM анализ (Segments, Frequencies, Monetaries) - информация по сегментам пользователей, 
    частотам и надежностям для определения сегментов.
    - C элементами (Classes, Elements, Categories, Types) - информация по известным элементам 
    видеоконференций, которые могут быть связаны с категорией (разрешенные, запрещенные, и т.д.) и 
    типом (субъекты, объекты, и т.д.), а также их соответствие классам модели анонимизации.
    - Технические (Models, Methods, Users, Anonymizations) - информация по зарегистрированных пользователя, 
    загруженным моделям и настроенным встроенным методам-способам анонимизации, а также текущим параметрам 
    анонимизации (комбинации модели и метода).

    Для каждой таблицы присутствуют кнопки для добавления (Add) и изменения по id записи (Edit). 
    Исключением является Methods и Anonymizations
    """
    st.divider()

    st.subheader("4. Отображение информации по текущим сеансам", divider="blue")
    """
    Во время обработки изображения могут быть обнаружены известные субъекты и объекты, 
    координаты которых сохраняются и образуются маски с вероятностью нахождения элемента.
    
    Эта информация должна демонстрироваться в режиме реального времени для мониторинга процесса анонимизации.    
    """
    st.divider()

    st.subheader("5. Ретроспективная аналитика", divider="violet")
    """
    Аналитика работы нейросетевой анонимизации включает в себя:
    - Динамика добавленных пользователей;
    - Количество сеансов, видеоизображений, заменных кадров по пользователям и анонимизациям;
    - Время использования способов анонимизации;
    - Количество сеансов по пользователям с анонимизацией;
    - Динамика количества и длительности сеансов;
    - Процент замененных кадров по пользователям;
    - Динамика видеоизображений с анонимизацией;
    - Количество найденных различных элементов, категорий, типов;
    - Распределение пользователей по сегментам (FM-анализ).
    """
    st.divider()

    st.header("Модель базы данных", divider="rainbow")
    db_model = st.pills(
        label=" ", options=["Логическая", "Физическая"], default="Логическая", label_visibility = "collapsed"
    )
    db_model_image = st.empty()
    if db_model == "Логическая":
        db_model_image.image("images/db_logical.png")
    elif db_model == "Физическая":
        db_model_image.image("images/db_physical.png")        
        

if __name__ == "__main__":
    main()
